syntax = "proto3";
package proto;

service AgentService
{
    rpc Register(AgentState) returns (Empty);
    rpc GetGameserverDeployments(GetGameserverDeploymentsRequest) returns (GetGameserverDeploymentsResponse);
}

message Empty {}

message AgentResources
{
    int64 cpus = 1;
    int64 memory = 2;
    int64 ipAddresses = 3;
}

message AgentResourceUsage
{
    int64 memory = 2;
}

message AgentState
{
    string hostname = 1;
    AgentResources resources = 2;
    AgentResourceUsage resourceUsage = 3;
    repeated Gameserver runningGameservers = 4;
}

message Endpoint
{
    string ipAddress = 1;
}

enum GameserverStatus {
    RUNNING = 0;
    PENDING = 1;
    ERROR = 2;
}

message Gameserver
{
    string UUID = 1;
    GameserverStatus status = 2;
    string info = 3;
    Endpoint endpoint = 4;
}

message GetGameserverDeploymentsRequest
{
    string hostname = 1;
}

message ResourceRequirements
{
    int64 cpuReservation = 1;
    int64 cpuLimit = 2;
    int64 memoryReservation = 3;
    int64 memoryLimit = 4;
}

enum NetworkProtocol {
    TCP = 0;
    UDP = 1;
}

message NetworkPort
{
    NetworkProtocol protocol = 1;
    int64 containerPort = 2;
}

message EnvironmentVariable
{
    string name = 1;
    string value = 2;
}

message GameserverDeployment
{
    string UUID = 1;
    string name = 2;
    string agent = 3;
    string image = 4;
    ResourceRequirements resourceRequirements = 5;
    repeated NetworkPort ports = 6;
    repeated EnvironmentVariable environment = 7;
}

message GetGameserverDeploymentsResponse
{
    repeated GameserverDeployment deployments = 1;
}
