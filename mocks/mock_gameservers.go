// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Trojan295/chinchilla/server/gameservers (interfaces: LogStore)

// Package mocks is a generated GoMock package.
package mocks

import (
	gameservers "github.com/Trojan295/chinchilla/server/gameservers"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLogStore is a mock of LogStore interface
type MockLogStore struct {
	ctrl     *gomock.Controller
	recorder *MockLogStoreMockRecorder
}

// MockLogStoreMockRecorder is the mock recorder for MockLogStore
type MockLogStoreMockRecorder struct {
	mock *MockLogStore
}

// NewMockLogStore creates a new mock instance
func NewMockLogStore(ctrl *gomock.Controller) *MockLogStore {
	mock := &MockLogStore{ctrl: ctrl}
	mock.recorder = &MockLogStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLogStore) EXPECT() *MockLogStoreMockRecorder {
	return m.recorder
}

// GetLogs mocks base method
func (m *MockLogStore) GetLogs(arg0 *gameservers.GetLogsRequest) (*gameservers.GetLogsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogs", arg0)
	ret0, _ := ret[0].(*gameservers.GetLogsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogs indicates an expected call of GetLogs
func (mr *MockLogStoreMockRecorder) GetLogs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogs", reflect.TypeOf((*MockLogStore)(nil).GetLogs), arg0)
}
